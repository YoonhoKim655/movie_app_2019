{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RAgCeA,MA5Bf,YACC,IADeC,EAChB,EADgBA,KAAMC,EACtB,EADsBA,MAAOC,EAC7B,EAD6BA,QAASC,EACtC,EADsCA,OAAQC,EAC9C,EAD8CA,OAE1C,OAAO,sBAAKC,UAAY,QAAjB,UACH,qBAAKC,IAAOH,EAAQI,IAAKN,EAAOA,MAASA,IACzC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAY,cAAhB,SAA+BJ,IAC/B,oBAAII,UAAY,aAAhB,SAA8BL,IAC9B,oBAAIK,UAAU,eAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAkBL,UAAU,eAA5B,SAA4CI,GAAjCC,QAGnB,oBAAGL,UAAW,gBAAd,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBC6BGC,G,kNAtCbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAEXC,U,sBAAY,8BAAAC,EAAA,sEAC+BC,IAAMC,IAAI,yEADzC,gBACYJ,EADZ,EACHK,KAAOA,KAAQL,OACtB,EAAKM,SAAS,CAACN,SAAQD,WAAY,IAFzB,2C,uDAKZ,WAEEQ,KAAKN,c,oBAGP,WACC,IAAD,EAC8BM,KAAKT,MAA1BC,EADT,EACSA,UAAWC,EADpB,EACoBA,OAChB,OACA,yBAASV,UAAY,YAArB,SACGS,EACD,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGA,qBAAKA,UAAY,SAAjB,SACEU,EAAOP,KAAI,SAAAe,GAAK,OAChB,cAAC,EAAD,CAEEC,GAAMD,EAAMC,GACZxB,KAAQuB,EAAMvB,KACdC,MAASsB,EAAMtB,MACfC,QAAUqB,EAAMrB,QAChBC,OAASoB,EAAME,mBACfrB,OAASmB,EAAMnB,QANVmB,EAAMC,e,GA7BPE,IAAMC,YCDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2f715a39.chunk.js","sourcesContent":["import React from 'react';\r\nimport Proptypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year, title, summary, poster, genres})\r\n{\r\n    return <div className = \"movie\">\r\n        <img src = {poster} alt={title} title = {title}/> \r\n        <div className=\"movie_class\">\r\n            <h3 className = \"movie_title\">{title}</h3>\r\n            <h5 className = \"movie_year\">{year}</h5>\r\n            <ul className=\"movie_genres\">\r\n                {genres.map((genre, index) => (\r\n                    <li key = {index} className=\"genres_genre\">{genre}</li>\r\n                ))}\r\n            </ul>\r\n            <p className =\"movie_summary\">{summary.slice(0, 140)}...</p>\r\n            \r\n        </div>\r\n    </div>;\r\n}//alt는 포스터에 커서를 놓았을 때 표시되는 텍스트\r\n\r\nMovie.propTypes = {\r\n    id : Proptypes.number.isRequired,\r\n    year : Proptypes.number.isRequired,\r\n    title : Proptypes.string.isRequired,\r\n    summary: Proptypes.string.isRequired,\r\n    poster: Proptypes.string.isRequired,\r\n    genres: Proptypes.arrayOf(Proptypes.string).isRequired\r\n};\r\n\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component\n{ \n  state = {\n    isLoading : true,\n    movies : []\n  };\n  getMovies = async () => { // async는 비동기 함수로 기다리라는 의미\n    const {data: {data : {movies}}} =  await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoading : false}); //movie state에 axios의 movie 삽입\n  } //axios는 javascript의 fetch와 같이 크롤링하는 기능(npm i axios)\n//await는 async에서 기다리는 것의 주체 => axios가 끝날 때까지 기다리는 것\n  componentDidMount()\n  {\n    this.getMovies();\n  }/*componentDidMount는 render후 바로 실행이되는 method이므로 \n     쉽게 render후에 state를 조절할 수 있다.*/\n  render()\n  {\n    const {isLoading, movies} = this.state;\n      return (\n      <section className = \"container\">\n        {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader_text\">Loading...</span>\n        </div> \n          ) :(\n          <div className = \"movies\">\n           {movies.map(movie =>(\n            <Movie\n              key={movie.id}\n              id = {movie.id} \n              year = {movie.year}\n              title = {movie.title}\n              summary= {movie.summary} \n              poster= {movie.medium_cover_image}\n              genres= {movie.genres}\n              />\n            ))}</div>\n  )}</section>);\n}}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n/*app .js에 있는 App() function을 반환\nreact는 한번에 하나의 component만을 반환(render),\n따라서 모든 것은 application안에 들어가야만한다.\n많은 component들을 하나의 app에 넣어야한다.\n*/"],"sourceRoot":""}